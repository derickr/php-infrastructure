# Run this playbook to initialise your machines
# `ansible-playbook -i inventory/php initialize.yml --extra-vars "@/path/to/admins.yml"`

# Set up firewall on all services
- hosts:
  - service

  remote_user: root

  tasks:
    # Add UFW firewall configuration so that the services are only accessible through the public ip of the jumphosts
  - name: Ensure UFW is installed
    apt:
      name: ufw
      state: present
      update_cache: yes

  - name: Allow ssh only from jumphost
    ufw:
      rule: allow
      from_ip: "{{ item }}"
      port: 22
    loop:
      - "{{ hostvars.ams3.ansible_default_ipv4.address }}"
      - "{{ hostvars.nyc1.ansible_default_ipv4.address }}"

  - name: Allow incoming requests from port 80 and 443
    ufw:
      rule: allow
      port: "{{ item }}"
    loop:
      - 80
      - 443

  - name: Enable UFW and deny incoming requests
    ufw:
      state: enabled
      policy: deny


# Add admin user and pubkey everywhere
- hosts:
  - all

  remote_user: root

  tasks:
  - name: Create a linux user and add it to sudo group
    user:
      name: "{{ item.name }}"
      create_home: yes
      state: present
      groups: sudo
      append: yes
      shell: /bin/bash
    loop: "{{ admins }}"

  # Allow members of group sudo to execute any command without specifying their password
  - name: Configure sudoers
    lineinfile:
      path: /etc/sudoers
      state: present
      regexp: '^%sudo ALL='
      insertafter: '^%sudo ALL='
      line: '%sudo ALL=(ALL) NOPASSWD: ALL'
      validate: '/usr/sbin/visudo -cf %s'

  - name: Copy admin's ssh-keys
    loop: "{{ admins }}"
    include_role:
      name: add_ssh_key
    vars:
      username: "{{ item.name }}"
      pubkeys: "{{ item.pubkeys }}"


# Install Google Authenticator and copy GA file on jumphosts
- hosts:
  - jumphost

  remote_user: root

  tasks:
    - name: Copy admin's Google Authenticator files
      loop: "{{ admins }}"
      include_role:
        name: add_GA_file
      vars:
        username: "{{ item.name }}"
        path_to_google_auth: "{{ item.GA_file }}"

  roles:
    - role: install_GA

# Disable root login at the very end
- hosts:
  - all

  remote_user: root

  tasks:
  - name: Disable root login
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^PermitRootLogin'
      line: 'PermitRootLogin no'
    notify: restart ssh

  handlers:
  - name: restart ssh
    service:
      name: ssh
      state:
