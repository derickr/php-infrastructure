# The following sets up SSL certificate using Let's Encrypt
# and schedules automatic renewal of the certificates. Parameters are required. Domain can be a list
# Note: This certbot role is for apache2 and won't work for nginx

# usage:
# - role: add_certbot
#   vars:
#     domain: "{{ downloads_domain }}"
#     email: "{{ systems_email }}"

- name: Check if all params are set
  fail:
    msg: "Please provide email and at least one domain to this role"
  when: (email is undefined) or (domain is undefined)

- name: Install certbot for apache
  apt:
    name:
      - certbot
      - python3-certbot-apache
    state: present
    update_cache: yes

# because we run certbot with certonly we have to enable this
- name: Enable SSL module in Apache
  command: a2enmod ssl
  args:
    creates: /etc/apache2/mods-enabled/ssl.conf
  notify: reload apache

# - name: Create options-ssl-apache.conf file
#   copy:
#     content: |
#       # Options for Apache SSL
#       SSLProtocol all -SSLv3 -TLSv1 -TLSv1.1
#       SSLCipherSuite ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
#       SSLHonorCipherOrder off
#       SSLSessionTickets off
#     dest: /etc/letsencrypt/options-ssl-apache.conf
#     mode: '644'

# Use certonly option to obtain the certificate without modifying the Apache configuration
- name: Get LetsEncrypt certificates
  shell: |
    certbot certonly --apache --expand -n --agree-tos --email {{ email }} -d  {{ domain | join(' -d ') }}
  args:
    creates: "/etc/letsencrypt/live/{{ domain[0] }}/fullchain.pem"

- name: Set up renewal cron job
  cron:
    name: "Renew Let's Encrypt certificates"
    job: "certbot renew --quiet" # 'quiet' is used to suppress the outputs
    state: present
    minute: 0
    hour: 0
    weekday: 1
  notify: reload apache
