# This role is being used by multiple properties. It creates a local backup directory and makes a backup of the root folder using Restic.
# Example usage:
# - name: Run backup tasks
#   include_role:
#     name: backup_property
#   vars:
#     property: property-name
#     domain: "{{ property_domain }}"
#     doc_root: "{{ property_document_root_path }}"


- name: Create temporary local backup directory if it doesn't exist
  file:
    path: "{{ backup_dir }}"
    state: directory
    mode: '755'

- name: Remove old backup file if it exists
  command:
    cmd: "rm -rf {{ backup_dir }}/*"

- name: Compress backup from local
  shell: |
    tar cf - {{ doc_root }} | bzip2 -9 > {{ backup_dir }}/{{ property }}-{{ ansible_date_time.date }}.tar.bz2

- name: Initialize Restic
  command:
    cmd: restic -r s3:{{ DO_bucket_url }}/{{ DO_bucket_name }}/{{ property }} init
  ignore_errors: yes

- name: Create daily backup
  cron:
    name: Daily backup
    job: |
      AWS_ACCESS_KEY_ID="{{ DO_access_key }}" \
      AWS_SECRET_ACCESS_KEY="{{ DO_secret_key }}" \
      RESTIC_PASSWORD="{{ restic_password }}" \
      restic -r s3:{{ DO_bucket_url }}/{{ DO_bucket_name }}/{{ property }} backup {{ backup_dir }}/{{ property }}-{{ ansible_date_time.date }}.tar.bz2
    state: present
    special_time: daily

# Prune backups older than 7 days as mentioned here: https://github.com/php/systems/blob/master/prune-backups
- name: Daily prune files older than 7 days
  cron:
    name: Daily prune files older than 7 days
    job: |
      AWS_ACCESS_KEY_ID="{{ DO_access_key }}" \
      AWS_SECRET_ACCESS_KEY="{{ DO_secret_key }}" \
      RESTIC_PASSWORD="{{ restic_password }}" \
      restic -r s3:{{ DO_bucket_url }}/{{ DO_bucket_name }}/{{ property }} forget --keep-daily 7 --prune
    state: present
    special_time: daily
