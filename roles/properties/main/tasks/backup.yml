# This reflects following the backup-main script https://github.com/php/systems/blob/master/backup-main

- name: Create temporary local backup directory if it doesn't exist
  file:
    path: "{{ backup_dir }}"
    state: directory
    mode: "777"

- name: Create a local backup directory with today's date
  file:
    path: "{{ backup_dir }}/{{ backup_name }}"
    state: directory
    mode: "755"

- name: Initialize Restic
  command:
    cmd: restic -r s3:{{ DO_bucket_url }}/{{ DO_bucket_name }}/main init
  environment:
    AWS_ACCESS_KEY_ID: "{{ DO_access_key }}"
    AWS_SECRET_ACCESS_KEY: "{{ DO_secret_key }}"
    RESTIC_PASSWORD: "{{ restic_password }}"
  ignore_errors: yes # it throws an error when it is already initialized

- name: Create backup script
  template:
    src: templates/backup-main
    dest: /local/systems/backup-main
    mode: "755"

- name: Create cron for msqldump and backup
  cron:
    name: Daily MySQL Dump and Backup
    job: /local/systems/backup-main
    special_time: daily
    state: present

# Prune backups older than 7 days as mentioned here: https://github.com/php/systems/blob/master/prune-backups
- name: Create cron for daily prune files older than 7 days
  cron:
    name: Daily prune files older than 7 days
    job: |
      AWS_ACCESS_KEY_ID="{{ DO_access_key }}" AWS_SECRET_ACCESS_KEY="{{ DO_secret_key }}" RESTIC_PASSWORD="{{ restic_password }}" restic -r s3:{{ DO_bucket_url }}/{{ DO_bucket_name }}/main forget --keep-daily 7 --prune
    special_time: daily
    state: present

