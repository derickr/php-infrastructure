# These tasks create a /local/backup folder.
# Create a cronjob creates a sql dump, loads the compesses dump up to S3 and removes it afterwards.
# Create another cron to prune backups, to keep only data that is not older than 7 days S3 storage
# Backup logs can be found at /local/systems/backup.log

# This reflects following the backup-main script https://github.com/php/systems/blob/master/backup-main

- name: Create temporary local backup directory if it doesn't exist
  file:
    path: "{{ backup_dir }}"
    state: directory
    mode: "755"

- name: Create a local backup directory with today's date
  file:
    path: "{{ backup_dir }}/{{ backup_name }}"
    state: directory
    mode: "755"

- name: Initialize Restic
  command:
    cmd: restic -r s3:{{ DO_bucket_url }}/{{ DO_bucket_name }}/main init
  environment:
    AWS_ACCESS_KEY_ID: "{{ DO_access_key }}"
    AWS_SECRET_ACCESS_KEY: "{{ DO_secret_key }}"
    RESTIC_PASSWORD: "{{ restic_password }}"
  # Only fail when the error is not: already initialized
  register: restic_init_result
  failed_when: >
    restic_init_result.rc != 0 and
    'repository master key and config already initialized' not in restic_init_result.stderr
  changed_when: restic_init_result.rc == 0

- name: Create backup script
  template:
    src: templates/backup-main
    dest: /local/systems/backup-main
    mode: "755"

- name: Create cron for msqldump and backup
  cron:
    name: Daily MySQL Dump and Backup
    job: /local/systems/backup-main
    special_time: daily
    state: present

# Prune backups older than 7 days as mentioned here: https://github.com/php/systems/blob/master/prune-backups
- name: Create cron for daily prune files older than 7 days
  cron:
    name: Daily prune files older than 7 days
    job: |
      AWS_ACCESS_KEY_ID="{{ DO_access_key }}" AWS_SECRET_ACCESS_KEY="{{ DO_secret_key }}" RESTIC_PASSWORD="{{ restic_password }}" restic -r s3:{{ DO_bucket_url }}/{{ DO_bucket_name }}/main forget --keep-daily 7 --prune
    special_time: daily
    state: present

