# This is following the backup-main script https://github.com/php/systems/blob/master/backup-main

- name: Setting backup name
  set_fact:
    backup_name: "{{ property }}-{{ ansible_date_time.date }}"

- name: Create temporary local backup directory if it doesn't exist
  file:
    path: "{{ backup_dir }}"
    state: directory
    mode: '777'

- name: Create a local backup directory with today's date
  file:
    path: "{{ backup_dir }}/{{ backup_name }}"
    state: directory
    mode: '755'

- name: Dump MySQL database to backup directory
  shell: |
    mysqldump -u nobody -Q phpmasterdb > {{ backup_dir }}/{{ backup_name }}/phpmasterdb.sql

- name: Compress backup
  shell: |
    tar cf - {{ backup_name }} | bzip2 -9 > {{ backup_dir }}/{{ backup_name }}.tar.bz2

- name: Remove uncompressed backup directory
  file:
    path: "{{ backup_dir }}/{{ backup_name }}"
    state: absent

- name: Initialize Restic
  command:
    cmd: restic -r s3:{{ DO_bucket_url }}/{{ DO_bucket_name }}/{{ property }} init
  environment:
    AWS_ACCESS_KEY_ID: "{{ DO_access_key }}"
    AWS_SECRET_ACCESS_KEY: "{{ DO_secret_key }}"
    RESTIC_PASSWORD: "{{ restic_password }}"
  ignore_errors: yes

- name: Create daily backup
  cron:
    name: Daily backup
    job: |
      AWS_ACCESS_KEY_ID="{{ DO_access_key }}" AWS_SECRET_ACCESS_KEY="{{ DO_secret_key }}" RESTIC_PASSWORD="{{ restic_password }}" restic -r s3:{{ DO_bucket_url }}/{{ DO_bucket_name }}/{{ property }} backup {{ backup_dir }}/{{ backup_name }}.tar.bz2
    special_time: "daily"
    state: present

# Prune backups older than 7 days as mentioned here: https://github.com/php/systems/blob/master/prune-backups
- name: Daily prune files older than 7 days
  cron:
    name: Daily prune files older than 7 days
    job: |
      AWS_ACCESS_KEY_ID="{{ DO_access_key }}" AWS_SECRET_ACCESS_KEY="{{ DO_secret_key }}" RESTIC_PASSWORD="{{ restic_password }}" restic -r s3:{{ DO_bucket_url }}/{{ DO_bucket_name }}/{{ property }} forget --keep-daily 7 --prune
    special_time: "daily"
    state: present

