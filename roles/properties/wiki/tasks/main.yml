# This role sets up the property wiki.php.net with Apache together with the php module
# It uses certbot SSL certs

- name: Install Apache with mod-php and php
  apt:
    name:
      - apache2
      - libapache2-mod-php8.2
      - php8.2
      - htop
      - lsof
    state: present
    update_cache: yes

- name: Add Apache config for wiki
  template:
    src: templates/wiki.conf
    dest: "/etc/apache2/sites-available/{{ wiki_config_file }}"
  notify: reload apache

# because we use Rewrite in our apache config we have to enable this
- name: Enable Apache PHP module
  command: a2enmod {{ item }}
  args:
    creates: /etc/apache2/mods-enabled/{{ item }}.load
  loop:
    - php8.2
    - headers
    - rewrite
  notify: reload apache

- name: Enable config file
  shell: "a2ensite {{ wiki_config_file }}"
  args:
    creates: "/etc/apache2/sites-enabled/{{ wiki_config_file }}"
  notify: reload apache

# Self-signed SSL
- name: Create the SSL Certificate
  include_role:
    name: add_self-signed_certs

- name: Create a strong Diffie-Hellman group
  command: openssl dhparam -out /etc/ssl/certs/dhparam.pem 4096
  args:
    creates: /etc/ssl/certs/dhparam.pem

- name: Set permissions for ssl certs
  file:
    path: "{{ item }}"
    mode: "600"
    owner: www-data
    group: www-data
  loop:
    - /etc/ssl/certs/php-self-signed.key
    - /etc/ssl/certs/php-self-signed.crt

- name: Ensure Apache is started and enabled
  service:
    name: apache2
    state: started
    enabled: yes

# Firewall settings
- name: Block port 80 access
  ufw:
    rule: deny
    proto: tcp
    port: 80

- name: Allow access to port 443 only from Myra hosts
  ufw:
    rule: allow
    port: 443
    proto: tcp
    src: "{{ item }}"
  loop: "{{ myra_hosts }}"

- name: Block port 443 access for elsewhere
  ufw:
    rule: deny
    port: 443
    proto: tcp

- include_tasks: deploy.yml

- name: Run backup tasks
  include_role:
    name: backup_property
  vars:
    property: wiki-data
    backup_path: '{{ wiki_data_dir }}'

# This can be run when backup data is run at least once and available for restore
# The restore role should be skipped when initializing the property for the first time with --extra-vars "first_run=true"
- name: Run restore tasks
  include_role:
    name: restore_property
  vars:
    property: wiki-data
    backup_path: '{{ wiki_data_dir }}'
  when: first_run is not defined or not first_run
